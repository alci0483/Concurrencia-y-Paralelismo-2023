2. Se desea modelar el funcionamiento de un banco en el cual existen 5 cajas para realizar pagos. Existen P personas que desean pagar. Para esto cada una selecciona 
la caja donde hay menos personas esperando, una vez seleccionada espera a ser atendido. Nota: maximizando la concurrencia.

chan Llegada(int), libres(int);
chan RespuestaFila[P](int);
chan LlegadaFila[5](int), Finaliza[5](), Salida[5]();
chan Turno[P]();

Process Persona[id: 0..P-1] {
    int caja;

    send Llegada(id);
    receive RespuestaFila[id](caja);
    send LlegadaFila[caja](id);
    receive Turno[id]();
    // soy atendido en la caja
    receive Finaliza[caja]();
    send Salida[caja]();
}

Process Coordinador {
    int cant[5] = ([5] 0), min, idP, aux;

    while (true) {

        if(not empty(libre)) -> receive libres(aux);
                                cant[aux]--;
        * (not empty(libre)) and (empty(libres)) -> receive Llegada(idP);
                                                    min = Minimo(cant);
                                                    cant[min]++;
                                                    send RespuestaFila[idP](min);
        fi
    }
}

Process Caja[id: 0..4] {
    int idP;

    while (true) {
        receive LlegadaFila[id](idP);
        send Turno[idP]();
        // Atiendo a la persona idP
        send Finaliza[id]();
        receive Salida[id]();
        send libres(id);
    }
}
