3. Existen N personas que deben fotocopiar un documento cada una. Resolver cada ítem usando semáforos:

a) Implemente una solución suponiendo que existe una única fotocopiadora compartida por todas las personas, y las mismas la deben usar de a una persona a la 
vez, sin importar el orden. Existe una función Fotocopiar() llamada por la persona que simula el uso de la fotocopiadora. Sólo se deben usar los procesos que 
representan a las Personas.

  sem mutex=1;

  process Persona[id:0..N-1] {
    P(mutex)
    fotocopiar();
    V(mutex)
  }

b) Modifique la solución de (a) para el caso en que se deba respetar el orden de llegada.

  sem mutex=1;
  sem turno[N]=([N] 0);
  bool libre=true;
  Cola c;

  process Persona[id:0..N-1] {
    int siguiente;

    P(mutex)
    if(libre){
      libre=false;
      V(mutex)
    }else{
      push(c,id);
      V(mutex)
      P(turno[id])
    }

    fotocopiar();

    P(mutex);
    if(empty(c)) libre=true;
    else{
      pop(c,siguiente);
      V(turno[siguiente])
    }
    V(mutex);
  }

c) Modifique la solución de (b) para el caso en que se deba dar prioridad de acuerdo a la edad de cada persona (cuando la fotocopiadora está libre la debe usar 
la persona de  mayor edad entre las que estén esperando para usarla).

sem mutex=1;
  sem turno[N]=([N] 0);
  bool libre=true;
  ColaOrdenadaEdad cE;

  process Persona[id:0..N-1] {
    int siguiente;

    P(mutex)
    if(libre){
      libre=false;
      V(mutex)
    }else{
      push(cE,id);
      V(mutex)
      P(turno[id])
    }

    fotocopiar();

    P(mutex);
    if(empty(cE)) libre=true;
    else{
      pop(cE,siguiente);
      V(turno[siguiente])
    }
    V(mutex);
  }

d) Modifique la solución de (b) para el caso en que además haya un Empleado que le indica a cada persona cuando debe usar la fotocopiadora.

  sem mutex=1;
  sem solicitud=0;
  sem continuar=0;
  sem turno[N]=([N] 0);
  Cola c;

  process Persona[id:0..N-1] {
    P(mutex)
    push(c,id);
    V(mutex)

    V(solicitud)
    P(turno[id])

    fotocopiar();
    V(continuar);
  }

process Empleado {
  int siguiente;

  while(true){
    P(solicitud)

    P(mutex)
    pop(c,siguiente);
    V(mutex);
    
    V(turno[siguiente])
    
    P(continuar)
  }
}


e) Modificar la solución (e) para el caso en que sean 10 fotocopiadoras. El empleado le indica a la persona cuando puede usar una fotocopiadora, y cual debe usar. 

  sem mutex=1;
  sem mutexImpresora=1;
  sem solicitud=0;
  sem libres=10;
  sem turno[N]=([N] 0);
  int impresoraAsignada[N]=([N] -1);    //id de la impresora asignada a cada persona (0..9)
  ColaImpresorasLibres cI;              //ids de las impresoras libres
  Cola c;

  process Persona[id:0..N-1] {
    int idImpresora;
    
    P(mutex)
    push(c,id);
    V(mutex)

    V(solicitud)
    P(turno[id])

    idImpresora=ImpresoraAsignada[id];
    fotocopiar(idImpresora);

    P(mutexImpresora)
    push(cI,idImpresora)
    V(mutexImpresora)
    
    V(libres)
  }

process Empleado {
  int siguiente, idImpresora;

  while(true){
    P(solicitud)

    P(mutex)
    pop(c,siguiente);
    V(mutex);

    P(libres)

    P(mutexImporesora)
    pop(cI,idImpresora);
    P(mutexImporesora)

    impresoraAsignada[id]=idImpresora;
    V(turno[siguiente])
  }
} 
