7. En una empresa de software hay 3 programadores que deben arreglar errores informados por N clientes. Los clientes continuamente están trabajando, y cuando encuentran un error
envían un reporte a la empresa para que lo corrija (no tienen que esperar a que se resuelva). Los programadores resuelven los reclamos de acuerdo al orden de llegada, y si no hay
reclamos pendientes trabajan durante una hora en otros programas. Nota: los procesos no deben terminar (trabajan en un loop infinito); suponga que hay una función ResolverError que
simula que un programador está resolviendo un reporte de un cliente, y otra Programar que simula que está trabajando en otro programa.

chan enviaReporteCliente(text);
chan solicitudReporteProgramador(id);
chan enviaReporteEmpresa[3](reporte)

process Cliente[id: 0..N-1] {
  text reporte; 
  
  while (true) {
    //trabaja  
    encortreError(reporte);
    send enviaReporteCliente(reporte);
  }

}

process Empresa {  //administradora de los programadores
  text reporte;
  int idProgramador;

  while (true) {
    receive solicitudReporteProgramador(idProgramador);
    
    if (not empty(enviaReporteCliente))
      receive enviaReporteCliente(reporte);
    else
      reporte='Vacio'
    
    send enviaReporteEmpresa[idProgramador](reporte);
}

process Programador[id: 0..2] {
  text reporte;
  
  while (true) {
      send solicitudReporteProgramador(id); 
      receive enviaReporteEmpresa[id](reporte)
      if(reporte == 'Vacio'){
        Programar();
        delay(3600); 
      }else{
        ResolverError(reporte);     
      }
    }

}

