3. Se dispone de un sistema compuesto por 1 central y 2 procesos. Los procesos envían señales a la central. La central comienza su ejecución tomando una señal del 
proceso 1, luego toma aleatoriamente señales de cualquiera de los dos indefinidamente. Al recibir una señal de proceso 2, recibe señales del mismo proceso durante 
3 minutos.
El proceso 1 envía una señal que es considerada vieja (se deshecha) si en 2 minutos no fue recibida.
El proceso 2 envía una señal, si no es recibida en ese instante espera 1 minuto y vuelve a mandarla (no se deshecha).

procedure Sistema is

    task Central is
        ENTRY Señal1(D : in texto);
        ENTRY Señal2(D : in texto);
        ENTRY fin;
    end Central;

    task  Proceso1; 
    task Proceso2; 

    task Reloj is
        ENTRY Empezar;
    end Reloj;

    task body Proceso1 is
        datos : texto;
    begin
        loop
            datos := generarSeñal();
            SELECT
                Central.Señal1(datos);
            OR DELAY 120
                null;
            END SELECT
        end loop
    end Proceso1;

    task body Proceso2 is
        datos : texto;
        boolean ok=true;
    begin
        loop
            if(ok) then
                datos := generarSeñal();
            end if

            SELECT
                Central.Señal2(datos);
                ok=true;
            ELSE
                of=false;
                delay(60);
            END SELECT
        end loop
    end Proceso2;

    task body Central is
        datos : texto;
        timeout : bool := false;
    begin
        accept Señal1(D : in texto) do 
            datos := D;
        End Señal1;

        loop
            SELECT
                accept Señal1(D : in texto) do 
                    datos := D; 
                End Señal1;
            OR
                accept Señal2(D : in texto) do 
                    datos := D;
                End Señal2;
                
                Reloj.Empezar();
                timeout := false;
                
                while (not ok) loop
                    SELECT
                        when(fin.count == 0) => accept Señal2(D : in texto) do 
                            datos := D;
                        End Señal2;
                    OR
                        accept fin() do 
                            ok := true;
                        End Temporizador;
                    END SELECT
                end loop
            END SELECT
        end loop
    end Central;

    task body Reloj is
    begin
        loop
            accept Empezar();
            delay(180);
            Central.fin();
        end loop
    end Reloj;

begin
    null;
end Sistema1;
