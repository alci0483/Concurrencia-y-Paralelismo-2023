Se debe simular una maratón con C corredores donde en la llegada hay UNA máquina expendedora de agua con capacidad para 20 botellas. Además existe un repositor
encargado de reponer las botellas de la máquina. Cuando los C corredores han llegado al inicio comienza la carrera. Cuando un corredor termina la carrera se dirigen a la máquina
expendedora, espera su turno (respetando el orden de llegada), saca una botella y se retira. Si encuentra la máquina sin botellas, le avisa al repositor para que cargue nuevamente la
máquina con 20 botellas; espera a que se haga la recarga; saca una botella y se retira. Nota: maximizar la concurrencia; mientras se reponen las botellas se debe permitir que otros
corredores se encolen. 

    Monitor Carrera {
      int cant = 0;
      Cond largada;

      Procedure Llegada() { 
        cant++;
        if (cant == C) signal_all(largada);
        else wait(largada);
      }
    }

    Monitor Admin{
        bool libre=true;
        cond espera;
        int cant_espera=0;

        procedure Solicitar(){
            if(libre) libre = false;
            else{
                cant_espera++;
                wait(espera);
            }
        }

        procedure liberar(){
            if(cant_espera > 0){
                cant_espera--;
                signal(espera);
            }else libre=true;
        }
    }

    Monitor Expendedora {
      int botellas = 20;
      Cond espera, repositor;

      Procedure Usar() {
         if (botellas == 0){
            signal(repositor);        // avisar a repositor
            wait(espera);    // permitir que se siga haciendo fila
         }

        botellas--;
      }

      Procedure Reponer() {
        if (botellas > 0) wait(repositor);    // dormirme sólo si hay botellas
        botellas = 20;
        signal(espera);                  // despertar a corredor
      }
    }

    Process Corredor[id: 0..C-1] {
      Carrera.Llegada();
      // Correr hasta la meta...
      Admin.Solicitar();
      Expendedora.Usar();
      Admin.liberar();
    }

    Process Repositor {
      while(true) -> Expendedora.Reponer();
    }
