5. En una oficina hay un empleado para atender a N personas. Las personas pueden tener prioridad ALTA o BAJA (cada uno conoce su prioridad). El empleado atiende a las personas
de acuerdo a la prioridad (primero los de ALTA y luego los de BAJA). Cada persona espera hasta que el empleado lo termina de atender y se retira. Nota: existe la función 
atender() que simula que el empleado está atendiendo a una persona; no debe hacerse Busy Waiting.

chan prioridadAlta(int);
chan prioridadBaja(int);
cahn llegada()
chan Turno[N](int)

process Persona [ id: 0 ..N-1] {
       boolean prioridad=...;        //ya conoce su prioridad
 
       if(prioridad) send prioridadAlta(id);
       else prioridadBaja(id)

       send llegada() 

       receive Turno[id]()
       //esta siendo atendido
       receive termino();
}

Process Empleado{
       int idP
  
       for i=0..N-1 {
              receive llegada(aux)
              
              if(not empty(prioridadAlta)) receive   
}        
